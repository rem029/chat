name: Backend build and deploy

on:
  push:
    branches: [main]
    paths:
      - packages/backend/**
  workflow_dispatch:

jobs:
  build-and-deploy:
    name: "build and deploy"
    runs-on: ubuntu-latest
    env:
      SSH_USER: ${{ secrets.SSH_USER }}
      SSH_KEY: ${{ secrets.SSH_KEY }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_PORT: ${{ secrets.SSH_PORT }}
      HOST_PATH: ${{ secrets.HOST_PATH }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: "yarn"
      - name: Install root packages
        run: |
          yarn cache clean
          rm -rf node_modules
          yarn install
      - name: Create backend .env file
        run: |
          cd ./packages/backend
          rm -f .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          echo DB_USER=${{ secrets.DB_USER }} >> .env
          echo DB_PW=${{ secrets.DB_PW }} >> .env
          echo DB_DB=${{ secrets.DB_DB }} >> .env

          echo PORT=1370 >> .env

          echo API_TOKEN_SECRET=${{ secrets.API_TOKEN_SECRET }} >> .env
          echo API_TOKEN_REFRESH=${{ secrets.API_TOKEN_REFRESH }} >> .env

          echo API_MAIL_KEY=${{ secrets.API_MAIL_KEY }} >> .env
          echo API_MAIL_SENDER=${{ secrets.API_MAIL_SENDER }} >> .env
          echo API_MAIL_DOMAIN=${{ secrets.API_MAIL_DOMAIN }} >> .env
          echo NODE_ENV=development >> .env
          cat .env
      - name: Install backend packages and install
        run: |
          cd ./packages/backend
          ls -a
          yarn install
          yarn lint
          yarn build:staging
      - name: Deploy backend to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "packages/backend/dist"
          target: ${{ secrets.HOST_PATH }}
          overwrite: true
      - name: Run deploy-backend.sh on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            PATH=$PATH:/${{secrets.SSH_USER}}/.npm-global/bin
            cd  ${{ secrets.HOST_PATH }}packages/backend/dist
            npm i -g yarn
            source deploy-backend.sh
